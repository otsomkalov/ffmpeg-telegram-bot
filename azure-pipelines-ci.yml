trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

variables:
  Runtime: 'linux-x64'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build
    displayName: 'Build'
    jobs:
      - job: build_all
        displayName: 'Build'
        steps:
          - task: UseDotNet@2
            inputs:
              version: '9.x'
          - task: DotNetCoreCLI@2
            name: Restore
            inputs:
              command: 'restore'
              projects: '**/*.fsproj'
              arguments: '-r $(Runtime)'
          - task: DotNetCoreCLI@2
            name: Build
            inputs:
              command: 'build'
              projects: '**/*.fsproj'
              arguments: '-r $(Runtime)'
              publishWebProjects: false
          - task: DotNetCoreCLI@2
            name: Test
            inputs:
              command: 'test'
              projects: '**/*.fsproj'
              arguments: '-r $(Runtime) --collect:"XPlat Code Coverage"'
          - task: PublishCodeCoverageResults@2
            displayName: 'Publish coverage'
            inputs:
              summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'
          - task: DotNetCoreCLI@2
            name: Publish
            inputs:
              command: 'publish'
              configuration: 'Release'
              projects: 'src/Bot/Bot.fsproj'
              arguments: '-r $(Runtime) -o $(Build.ArtifactStagingDirectory)'
              publishWebProjects: false
          - task: PublishBuildArtifacts@1
            name: Pack
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'